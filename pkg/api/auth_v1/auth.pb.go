// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v5.27.3
// source: auth_v1/auth.proto

package auth_v1

import (
	_ "github.com/envoyproxy/protoc-gen-validate/validate"
	_ "github.com/grpc-ecosystem/grpc-gateway/v2/protoc-gen-openapiv2/options"
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LoginRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Username string `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginRequest) Reset() {
	*x = LoginRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_v1_auth_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginRequest) ProtoMessage() {}

func (x *LoginRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_v1_auth_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginRequest.ProtoReflect.Descriptor instead.
func (*LoginRequest) Descriptor() ([]byte, []int) {
	return file_auth_v1_auth_proto_rawDescGZIP(), []int{0}
}

func (x *LoginRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *LoginRequest) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *LoginResponse) Reset() {
	*x = LoginResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_v1_auth_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoginResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginResponse) ProtoMessage() {}

func (x *LoginResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_v1_auth_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginResponse.ProtoReflect.Descriptor instead.
func (*LoginResponse) Descriptor() ([]byte, []int) {
	return file_auth_v1_auth_proto_rawDescGZIP(), []int{1}
}

func (x *LoginResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *LoginResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type UpdateTokenRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RefreshToken string `protobuf:"bytes,1,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *UpdateTokenRequest) Reset() {
	*x = UpdateTokenRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_v1_auth_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTokenRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTokenRequest) ProtoMessage() {}

func (x *UpdateTokenRequest) ProtoReflect() protoreflect.Message {
	mi := &file_auth_v1_auth_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTokenRequest.ProtoReflect.Descriptor instead.
func (*UpdateTokenRequest) Descriptor() ([]byte, []int) {
	return file_auth_v1_auth_proto_rawDescGZIP(), []int{2}
}

func (x *UpdateTokenRequest) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

type UpdateTokenResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	AccessToken  string `protobuf:"bytes,1,opt,name=access_token,json=accessToken,proto3" json:"access_token,omitempty"`
	RefreshToken string `protobuf:"bytes,2,opt,name=refresh_token,json=refreshToken,proto3" json:"refresh_token,omitempty"`
}

func (x *UpdateTokenResponse) Reset() {
	*x = UpdateTokenResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_auth_v1_auth_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *UpdateTokenResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateTokenResponse) ProtoMessage() {}

func (x *UpdateTokenResponse) ProtoReflect() protoreflect.Message {
	mi := &file_auth_v1_auth_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateTokenResponse.ProtoReflect.Descriptor instead.
func (*UpdateTokenResponse) Descriptor() ([]byte, []int) {
	return file_auth_v1_auth_proto_rawDescGZIP(), []int{3}
}

func (x *UpdateTokenResponse) GetAccessToken() string {
	if x != nil {
		return x.AccessToken
	}
	return ""
}

func (x *UpdateTokenResponse) GetRefreshToken() string {
	if x != nil {
		return x.RefreshToken
	}
	return ""
}

var File_auth_v1_auth_proto protoreflect.FileDescriptor

var file_auth_v1_auth_proto_rawDesc = []byte{
	0x0a, 0x12, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x76, 0x31, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x12, 0x07, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x76, 0x31, 0x1a, 0x1b, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65,
	0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x17, 0x76, 0x61, 0x6c, 0x69,
	0x64, 0x61, 0x74, 0x65, 0x2f, 0x76, 0x61, 0x6c, 0x69, 0x64, 0x61, 0x74, 0x65, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x1a, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x63, 0x2d, 0x67, 0x65, 0x6e, 0x2d, 0x6f, 0x70,
	0x65, 0x6e, 0x61, 0x70, 0x69, 0x76, 0x32, 0x2f, 0x6f, 0x70, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2f,
	0x61, 0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x22, 0x88, 0x01, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x3a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x42, 0x1e, 0x92, 0x41, 0x12, 0x32, 0x08, 0x55, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x4a, 0x06, 0x22, 0x72, 0x6f, 0x6f, 0x74, 0x22, 0xfa, 0x42, 0x06, 0x72, 0x04,
	0x10, 0x01, 0x18, 0x32, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x3c,
	0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x42, 0x20, 0x92, 0x41, 0x14, 0x32, 0x08, 0x50, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x4a,
	0x08, 0x22, 0x71, 0x77, 0x65, 0x72, 0x74, 0x79, 0x22, 0xfa, 0x42, 0x06, 0x72, 0x04, 0x10, 0x01,
	0x18, 0x32, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0xc1, 0x03, 0x0a,
	0x0d, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xd6,
	0x01, 0x0a, 0x0c, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x09, 0x42, 0xb2, 0x01, 0x92, 0x41, 0xae, 0x01, 0x32, 0x0c, 0x41, 0x63,
	0x63, 0x65, 0x73, 0x73, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4a, 0x9d, 0x01, 0x22, 0x65, 0x79,
	0x4a, 0x68, 0x62, 0x47, 0x63, 0x69, 0x4f, 0x69, 0x4a, 0x49, 0x55, 0x7a, 0x49, 0x31, 0x4e, 0x69,
	0x49, 0x73, 0x49, 0x6e, 0x52, 0x35, 0x63, 0x43, 0x49, 0x36, 0x49, 0x6b, 0x70, 0x58, 0x56, 0x43,
	0x4a, 0x39, 0x2e, 0x65, 0x79, 0x4a, 0x7a, 0x64, 0x57, 0x49, 0x69, 0x4f, 0x69, 0x49, 0x78, 0x4d,
	0x6a, 0x4d, 0x30, 0x4e, 0x54, 0x59, 0x33, 0x4f, 0x44, 0x6b, 0x77, 0x49, 0x69, 0x77, 0x69, 0x62,
	0x6d, 0x46, 0x74, 0x5a, 0x53, 0x49, 0x36, 0x49, 0x6b, 0x70, 0x76, 0x61, 0x47, 0x34, 0x67, 0x52,
	0x47, 0x39, 0x6c, 0x49, 0x69, 0x77, 0x69, 0x61, 0x57, 0x46, 0x30, 0x49, 0x6a, 0x6f, 0x78, 0x4e,
	0x54, 0x45, 0x32, 0x4d, 0x6a, 0x4d, 0x35, 0x4d, 0x44, 0x49, 0x79, 0x66, 0x51, 0x2e, 0x53, 0x66,
	0x6c, 0x4b, 0x78, 0x77, 0x52, 0x4a, 0x53, 0x4d, 0x65, 0x4b, 0x4b, 0x46, 0x32, 0x51, 0x54, 0x34,
	0x66, 0x77, 0x70, 0x4d, 0x65, 0x4a, 0x66, 0x33, 0x36, 0x50, 0x4f, 0x6b, 0x36, 0x79, 0x4a, 0x56,
	0x5f, 0x61, 0x64, 0x51, 0x73, 0x73, 0x77, 0x35, 0x63, 0x22, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65,
	0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0xd6, 0x01, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42,
	0xb0, 0x01, 0x92, 0x41, 0xac, 0x01, 0x32, 0x0d, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x20,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4a, 0x9a, 0x01, 0x22, 0x65, 0x79, 0x4a, 0x68, 0x62, 0x47, 0x63,
	0x69, 0x4f, 0x69, 0x4a, 0x49, 0x55, 0x7a, 0x49, 0x31, 0x4e, 0x69, 0x49, 0x73, 0x49, 0x6e, 0x52,
	0x35, 0x63, 0x43, 0x49, 0x36, 0x49, 0x6b, 0x70, 0x58, 0x56, 0x43, 0x4a, 0x39, 0x2e, 0x65, 0x79,
	0x4a, 0x7a, 0x64, 0x57, 0x49, 0x69, 0x4f, 0x69, 0x49, 0x78, 0x4d, 0x6a, 0x45, 0x32, 0x4e, 0x7a,
	0x67, 0x35, 0x4d, 0x43, 0x49, 0x73, 0x49, 0x6d, 0x35, 0x68, 0x62, 0x57, 0x55, 0x69, 0x4f, 0x69,
	0x4a, 0x4b, 0x62, 0x32, 0x68, 0x75, 0x49, 0x45, 0x52, 0x76, 0x5a, 0x53, 0x49, 0x73, 0x49, 0x6d,
	0x6c, 0x68, 0x64, 0x43, 0x49, 0x36, 0x4d, 0x54, 0x55, 0x78, 0x4e, 0x6a, 0x49, 0x7a, 0x4f, 0x54,
	0x41, 0x79, 0x4d, 0x6e, 0x30, 0x2e, 0x77, 0x5a, 0x33, 0x74, 0x41, 0x50, 0x57, 0x70, 0x69, 0x66,
	0x76, 0x6b, 0x76, 0x4b, 0x45, 0x69, 0x7a, 0x4d, 0x4d, 0x71, 0x52, 0x38, 0x42, 0x32, 0x51, 0x4a,
	0x65, 0x44, 0x32, 0x51, 0x31, 0x6e, 0x46, 0x57, 0x42, 0x52, 0x50, 0x64, 0x45, 0x31, 0x6e, 0x72,
	0x67, 0x22, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0xed, 0x01, 0x0a, 0x12, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0xd6, 0x01, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72,
	0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0xb0, 0x01, 0x92, 0x41, 0xac, 0x01, 0x32, 0x0d, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x20,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4a, 0x9a, 0x01, 0x22, 0x65, 0x79, 0x4a, 0x68, 0x62, 0x47, 0x63,
	0x69, 0x4f, 0x69, 0x4a, 0x49, 0x55, 0x7a, 0x49, 0x31, 0x4e, 0x69, 0x49, 0x73, 0x49, 0x6e, 0x52,
	0x35, 0x63, 0x43, 0x49, 0x36, 0x49, 0x6b, 0x70, 0x58, 0x56, 0x43, 0x4a, 0x39, 0x2e, 0x65, 0x79,
	0x4a, 0x7a, 0x64, 0x57, 0x49, 0x69, 0x4f, 0x69, 0x49, 0x78, 0x4d, 0x6a, 0x45, 0x32, 0x4e, 0x7a,
	0x67, 0x35, 0x4d, 0x43, 0x49, 0x73, 0x49, 0x6d, 0x35, 0x68, 0x62, 0x57, 0x55, 0x69, 0x4f, 0x69,
	0x4a, 0x4b, 0x62, 0x32, 0x68, 0x75, 0x49, 0x45, 0x52, 0x76, 0x5a, 0x53, 0x49, 0x73, 0x49, 0x6d,
	0x6c, 0x68, 0x64, 0x43, 0x49, 0x36, 0x4d, 0x54, 0x55, 0x78, 0x4e, 0x6a, 0x49, 0x7a, 0x4f, 0x54,
	0x41, 0x79, 0x4d, 0x6e, 0x30, 0x2e, 0x77, 0x5a, 0x33, 0x74, 0x41, 0x50, 0x57, 0x70, 0x69, 0x66,
	0x76, 0x6b, 0x76, 0x4b, 0x45, 0x69, 0x7a, 0x4d, 0x4d, 0x71, 0x52, 0x38, 0x42, 0x32, 0x51, 0x4a,
	0x65, 0x44, 0x32, 0x51, 0x31, 0x6e, 0x46, 0x57, 0x42, 0x52, 0x50, 0x64, 0x45, 0x31, 0x6e, 0x72,
	0x67, 0x22, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x22, 0xc7, 0x03, 0x0a, 0x13, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0xd6, 0x01, 0x0a, 0x0c, 0x61, 0x63, 0x63,
	0x65, 0x73, 0x73, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x42,
	0xb2, 0x01, 0x92, 0x41, 0xae, 0x01, 0x32, 0x0c, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x20, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x4a, 0x9d, 0x01, 0x22, 0x65, 0x79, 0x4a, 0x68, 0x62, 0x47, 0x63, 0x69,
	0x4f, 0x69, 0x4a, 0x49, 0x55, 0x7a, 0x49, 0x31, 0x4e, 0x69, 0x49, 0x73, 0x49, 0x6e, 0x52, 0x35,
	0x63, 0x43, 0x49, 0x36, 0x49, 0x6b, 0x70, 0x58, 0x56, 0x43, 0x4a, 0x39, 0x2e, 0x65, 0x79, 0x4a,
	0x7a, 0x64, 0x57, 0x49, 0x69, 0x4f, 0x69, 0x49, 0x78, 0x4d, 0x6a, 0x4d, 0x30, 0x4e, 0x54, 0x59,
	0x33, 0x4f, 0x44, 0x6b, 0x77, 0x49, 0x69, 0x77, 0x69, 0x62, 0x6d, 0x46, 0x74, 0x5a, 0x53, 0x49,
	0x36, 0x49, 0x6b, 0x70, 0x76, 0x61, 0x47, 0x34, 0x67, 0x52, 0x47, 0x39, 0x6c, 0x49, 0x69, 0x77,
	0x69, 0x61, 0x57, 0x46, 0x30, 0x49, 0x6a, 0x6f, 0x78, 0x4e, 0x54, 0x45, 0x32, 0x4d, 0x6a, 0x4d,
	0x35, 0x4d, 0x44, 0x49, 0x79, 0x66, 0x51, 0x2e, 0x53, 0x66, 0x6c, 0x4b, 0x78, 0x77, 0x52, 0x4a,
	0x53, 0x4d, 0x65, 0x4b, 0x4b, 0x46, 0x32, 0x51, 0x54, 0x34, 0x66, 0x77, 0x70, 0x4d, 0x65, 0x4a,
	0x66, 0x33, 0x36, 0x50, 0x4f, 0x6b, 0x36, 0x79, 0x4a, 0x56, 0x5f, 0x61, 0x64, 0x51, 0x73, 0x73,
	0x77, 0x35, 0x63, 0x22, 0x52, 0x0b, 0x61, 0x63, 0x63, 0x65, 0x73, 0x73, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x12, 0xd6, 0x01, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x42, 0xb0, 0x01, 0x92, 0x41, 0xac, 0x01,
	0x32, 0x0d, 0x52, 0x65, 0x66, 0x72, 0x65, 0x73, 0x68, 0x20, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x4a,
	0x9a, 0x01, 0x22, 0x65, 0x79, 0x4a, 0x68, 0x62, 0x47, 0x63, 0x69, 0x4f, 0x69, 0x4a, 0x49, 0x55,
	0x7a, 0x49, 0x31, 0x4e, 0x69, 0x49, 0x73, 0x49, 0x6e, 0x52, 0x35, 0x63, 0x43, 0x49, 0x36, 0x49,
	0x6b, 0x70, 0x58, 0x56, 0x43, 0x4a, 0x39, 0x2e, 0x65, 0x79, 0x4a, 0x7a, 0x64, 0x57, 0x49, 0x69,
	0x4f, 0x69, 0x49, 0x78, 0x4d, 0x6a, 0x45, 0x32, 0x4e, 0x7a, 0x67, 0x35, 0x4d, 0x43, 0x49, 0x73,
	0x49, 0x6d, 0x35, 0x68, 0x62, 0x57, 0x55, 0x69, 0x4f, 0x69, 0x4a, 0x4b, 0x62, 0x32, 0x68, 0x75,
	0x49, 0x45, 0x52, 0x76, 0x5a, 0x53, 0x49, 0x73, 0x49, 0x6d, 0x6c, 0x68, 0x64, 0x43, 0x49, 0x36,
	0x4d, 0x54, 0x55, 0x78, 0x4e, 0x6a, 0x49, 0x7a, 0x4f, 0x54, 0x41, 0x79, 0x4d, 0x6e, 0x30, 0x2e,
	0x77, 0x5a, 0x33, 0x74, 0x41, 0x50, 0x57, 0x70, 0x69, 0x66, 0x76, 0x6b, 0x76, 0x4b, 0x45, 0x69,
	0x7a, 0x4d, 0x4d, 0x71, 0x52, 0x38, 0x42, 0x32, 0x51, 0x4a, 0x65, 0x44, 0x32, 0x51, 0x31, 0x6e,
	0x46, 0x57, 0x42, 0x52, 0x50, 0x64, 0x45, 0x31, 0x6e, 0x72, 0x67, 0x22, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x72, 0x65, 0x73, 0x68, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x32, 0xcc, 0x04, 0x0a, 0x06, 0x41,
	0x75, 0x74, 0x68, 0x56, 0x31, 0x12, 0xc6, 0x01, 0x0a, 0x05, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x12,
	0x15, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x76, 0x31, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x76, 0x31,
	0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8d,
	0x01, 0x92, 0x41, 0x6e, 0x12, 0x35, 0xd0, 0x90, 0xd1, 0x83, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbd,
	0xd1, 0x82, 0xd0, 0xb8, 0xd1, 0x84, 0xd0, 0xb8, 0xd0, 0xba, 0xd0, 0xb0, 0xd1, 0x86, 0xd0, 0xb8,
	0xd1, 0x8f, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0,
	0xb2, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8f, 0x1a, 0x35, 0xd0, 0x90, 0xd1,
	0x83, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbd, 0xd1, 0x82, 0xd0, 0xb8, 0xd1, 0x84, 0xd0, 0xb8, 0xd0,
	0xba, 0xd0, 0xb0, 0xd1, 0x86, 0xd0, 0xb8, 0xd1, 0x8f, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbb,
	0xd1, 0x8c, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb,
	0xd1, 0x8f, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x16, 0x22, 0x11, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x41,
	0x75, 0x74, 0x68, 0x56, 0x31, 0x2f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0xb9,
	0x01, 0x0a, 0x0b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x1b,
	0x2e, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1c, 0x2e, 0x61, 0x75,
	0x74, 0x68, 0x5f, 0x76, 0x31, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65,
	0x6e, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x6f, 0x92, 0x41, 0x4a, 0x12, 0x23,
	0xd0, 0x9e, 0xd0, 0xb1, 0xd0, 0xbd, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xbb, 0xd0, 0xb5, 0xd0, 0xbd,
	0xd0, 0xb8, 0xd0, 0xb5, 0x20, 0xd1, 0x82, 0xd0, 0xbe, 0xd0, 0xba, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0,
	0xbe, 0xd0, 0xb2, 0x1a, 0x23, 0xd0, 0x9e, 0xd0, 0xb1, 0xd0, 0xbd, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0,
	0xbb, 0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xb8, 0xd0, 0xb5, 0x20, 0xd1, 0x82, 0xd0, 0xbe, 0xd0, 0xba,
	0xd0, 0xb5, 0xd0, 0xbd, 0xd0, 0xbe, 0xd0, 0xb2, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x1c, 0x22, 0x17,
	0x2f, 0x61, 0x70, 0x69, 0x2f, 0x41, 0x75, 0x74, 0x68, 0x56, 0x31, 0x2f, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x3a, 0x01, 0x2a, 0x12, 0xbc, 0x01, 0x0a, 0x06, 0x4c,
	0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x81, 0x01, 0x92, 0x41, 0x64, 0x12, 0x28, 0xd0, 0x92, 0xd1,
	0x8b, 0xd0, 0xb9, 0xd1, 0x82, 0xd0, 0xb8, 0x20, 0xd0, 0xb8, 0xd0, 0xb7, 0x20, 0xd0, 0xbf, 0xd0,
	0xbe, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0, 0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x82, 0xd0,
	0xb5, 0xd0, 0xbb, 0xd1, 0x8f, 0x1a, 0x38, 0xd0, 0x97, 0xd0, 0xb0, 0xd0, 0xb2, 0xd0, 0xb5, 0xd1,
	0x80, 0xd1, 0x88, 0xd0, 0xb8, 0xd1, 0x82, 0xd1, 0x8c, 0x20, 0xd1, 0x81, 0xd0, 0xb5, 0xd1, 0x81,
	0xd1, 0x81, 0xd0, 0xb8, 0xd1, 0x8e, 0x20, 0xd0, 0xbf, 0xd0, 0xbe, 0xd0, 0xbb, 0xd1, 0x8c, 0xd0,
	0xb7, 0xd0, 0xbe, 0xd0, 0xb2, 0xd0, 0xb0, 0xd1, 0x82, 0xd0, 0xb5, 0xd0, 0xbb, 0xd1, 0x8f, 0x82,
	0xd3, 0xe4, 0x93, 0x02, 0x14, 0x12, 0x12, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x41, 0x75, 0x74, 0x68,
	0x56, 0x31, 0x2f, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x42, 0x3b, 0x5a, 0x39, 0x67, 0x69, 0x74,
	0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x74, 0x33, 0x34, 0x2d, 0x64, 0x65, 0x76, 0x2f,
	0x67, 0x6f, 0x2d, 0x73, 0x76, 0x63, 0x2d, 0x73, 0x74, 0x61, 0x72, 0x74, 0x65, 0x72, 0x2f, 0x70,
	0x6b, 0x67, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61, 0x75, 0x74, 0x68, 0x5f, 0x76, 0x31, 0x3b, 0x61,
	0x75, 0x74, 0x68, 0x5f, 0x76, 0x31, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_auth_v1_auth_proto_rawDescOnce sync.Once
	file_auth_v1_auth_proto_rawDescData = file_auth_v1_auth_proto_rawDesc
)

func file_auth_v1_auth_proto_rawDescGZIP() []byte {
	file_auth_v1_auth_proto_rawDescOnce.Do(func() {
		file_auth_v1_auth_proto_rawDescData = protoimpl.X.CompressGZIP(file_auth_v1_auth_proto_rawDescData)
	})
	return file_auth_v1_auth_proto_rawDescData
}

var file_auth_v1_auth_proto_msgTypes = make([]protoimpl.MessageInfo, 4)
var file_auth_v1_auth_proto_goTypes = []interface{}{
	(*LoginRequest)(nil),        // 0: auth_v1.LoginRequest
	(*LoginResponse)(nil),       // 1: auth_v1.LoginResponse
	(*UpdateTokenRequest)(nil),  // 2: auth_v1.UpdateTokenRequest
	(*UpdateTokenResponse)(nil), // 3: auth_v1.UpdateTokenResponse
	(*emptypb.Empty)(nil),       // 4: google.protobuf.Empty
}
var file_auth_v1_auth_proto_depIdxs = []int32{
	0, // 0: auth_v1.AuthV1.Login:input_type -> auth_v1.LoginRequest
	2, // 1: auth_v1.AuthV1.UpdateToken:input_type -> auth_v1.UpdateTokenRequest
	4, // 2: auth_v1.AuthV1.Logout:input_type -> google.protobuf.Empty
	1, // 3: auth_v1.AuthV1.Login:output_type -> auth_v1.LoginResponse
	3, // 4: auth_v1.AuthV1.UpdateToken:output_type -> auth_v1.UpdateTokenResponse
	4, // 5: auth_v1.AuthV1.Logout:output_type -> google.protobuf.Empty
	3, // [3:6] is the sub-list for method output_type
	0, // [0:3] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_auth_v1_auth_proto_init() }
func file_auth_v1_auth_proto_init() {
	if File_auth_v1_auth_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_auth_v1_auth_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_v1_auth_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoginResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_v1_auth_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTokenRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_auth_v1_auth_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*UpdateTokenResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_auth_v1_auth_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   4,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_auth_v1_auth_proto_goTypes,
		DependencyIndexes: file_auth_v1_auth_proto_depIdxs,
		MessageInfos:      file_auth_v1_auth_proto_msgTypes,
	}.Build()
	File_auth_v1_auth_proto = out.File
	file_auth_v1_auth_proto_rawDesc = nil
	file_auth_v1_auth_proto_goTypes = nil
	file_auth_v1_auth_proto_depIdxs = nil
}
