syntax = "proto3";

package random_v1;

import "google/protobuf/timestamp.proto";
import "google/api/annotations.proto";
import "protoc-gen-openapiv2/options/annotations.proto";
import "validate/validate.proto";

option go_package = "github.com/t34-dev/go-svc-starter/pkg/api/random_v1;random_v1";

option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_swagger) = {
	info: {
		title: "Random Service API";
		version: "1.0";
		description: "API for various random operations and information retrieval";
	};
	schemes: HTTP;
	consumes: "application/grpc";
	produces: "application/grpc";
	security_definitions: {
		security: {
			key: "ApiKeyAuth";
			value: {
				type: TYPE_API_KEY;
				in: IN_HEADER;
				name: "X-API-Key";
			}
		}
	}
	security: {
		security_requirement: {
			key: "ApiKeyAuth";
			value: {};
		}
	}
};

// RandomService provides various methods for obtaining random data and performing operations
service RandomService {
	rpc GetPing(EmptyRequest) returns (PongResponse) {
		option (google.api.http) = {
			get: "/api/v1/ping"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			summary: "Ping server"
			tags: ["test"]
		};
	}
	// Get current time
	rpc GetCurrentTime(EmptyRequest) returns (TimeResponse) {
		option (google.api.http) = {
			get: "/api/v1/time"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			summary: "Get current time"
			description: "Returns the current server time"
			tags: ["time"]
		};
	}

	// Get a random number
	rpc GetRandomNumber(EmptyRequest) returns (NumberResponse) {
		option (google.api.http) = {
			get: "/api/v1/random-number"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			summary: "Get a random number"
			description: "Returns a random number from 0 to 99"
			tags: ["random"]
		};
	}

	// Get a random quote
	rpc GetRandomQuote(EmptyRequest) returns (QuoteResponse) {
		option (google.api.http) = {
			get: "/api/v1/random-quote"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			summary: "Get a random quote"
			description: "Returns a random quote from a predefined list"
			tags: ["random"]
		};
	}

	// Perform a long operation with streaming response
	rpc PerformLongOperation(LongOperationRequest) returns (stream LongOperationResponse) {
		option (google.api.http) = {
			post: "/api/v1/long-operation"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			summary: "Perform a long operation"
			description: "Initiates a long operation and returns streaming updates about its progress"
			tags: ["operations"]
		};
	}

	// Get text length
	rpc GetLen(TxtRequest) returns (TxtResponse) {
		option (google.api.http) = {
			post: "/api/v1/text-length"
			body: "*"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			summary: "Get text length"
			description: "Returns the number of characters in the provided text"
			tags: ["text"]
		};
	}

	// Get person information
	rpc GetPerson(EmptyRequest) returns (Person) {
		option (google.api.http) = {
			get: "/api/v1/person"
		};
		option (grpc.gateway.protoc_gen_openapiv2.options.openapiv2_operation) = {
			summary: "Get person information"
			description: "Returns an example of person information"
			tags: ["person"]
		};
	}
}

// Other message definitions remain unchanged
message EmptyRequest {}
message PongResponse {
	string text = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Server response"
		example: "\"pong\""
	}];
}

message TimeResponse {
	google.protobuf.Timestamp time = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Current time"
		example: "\"2023-04-01T12:00:00Z\""
	}];
}

message NumberResponse {
	int32 number = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Random number from 0 to 99"
		example: "42"
	}];
}

message QuoteResponse {
	string quote = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Random quote"
		example: "\"The only way to do great work is to love what you do.\""
	}];
}

message LongOperationRequest {}

message LongOperationResponse {
	enum Status {
		IN_PROGRESS = 0;
		COMPLETED = 1;
		FAILED = 2;
	}
	Status status = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Operation status"
	}];
	string message = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Progress message"
	}];
	int32 progress = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Completion percentage (0-100)"
	}];
	string result = 4 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Operation result (if completed)"
	}];
}

message TxtRequest {
	string text = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Text to analyze"
		example: "\"Hello, world!\""
	}, (validate.rules).string = {min_len:1, max_len: 50}];
}

message TxtResponse {
	uint32 number = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Text length (number of characters)"
		example: "13"
	}];
}

message Parent {
	string name = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Parent's name"
		example: "\"John Doe\""
	}];
}

message Person {
	string name = 1 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Person's name"
		example: "\"Alice\""
	}];
	int32 age = 2 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "Person's age"
		example: "30"
	}];
	repeated string children = 3 [(grpc.gateway.protoc_gen_openapiv2.options.openapiv2_field) = {
		description: "List of children's names"
	}];
	Parent parent = 4;
}
